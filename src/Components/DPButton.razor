<button class="@ActualStyle" disabled="@IsDisabled" @onclick="OnClickAsync">
    @if (IsLoading)
    {
        <span class="opacity-0">@ChildContent</span>
        <img src="/_content/ChatAIze.DopamineUI/img/loading.gif" height="24" width="24" class="absolute opacity-100 dark:opacity-0" />
        <img src="/_content/ChatAIze.DopamineUI/img/loading-dark.gif" height="24" width="24" class="absolute opacity-0 dark:opacity-100" />
    }
    else
    {
        @ChildContent
    }
</button>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public ButtonStyle Style { get; set; }

    [Parameter]
    public bool? IsFullWidth { get; set; }

    [Parameter]
    public bool IsLoading { get; set; }

    [Parameter]
    public bool IsDisabled { get; set; }

    [Parameter]
    public EventCallback Clicked { get; set; }

    private string ActualStyle
    {
        get
        {
            string style;

            if (IsLoading)
            {
                style = "button-loading";
            }
            else if (IsDisabled)
            {
                style = "button-disabled";
            }
            else
            {
                style = Style switch
                {
                    ButtonStyle.Primary => "button-primary",
                    ButtonStyle.Accent => "button-accent",
                    ButtonStyle.Danger => "button-danger",
                    ButtonStyle.Destructive => "button-destructive",
                    _ => "button-default"
                };
            }

            if (IsFullWidth == true)
            {
                style += " w-full";
            }
            else if (IsFullWidth == null)
            {
                style += " w-full sm:w-auto";
            }

            return style;
        }
    }

    private async Task OnClickAsync()
    {
        if (!IsLoading && !IsDisabled && Clicked.HasDelegate)
        {
            await Clicked.InvokeAsync();
        }
    }
}
