@implements ITaggable

<button class="@ItemClass" disabled="@Context.IsDisabled" ontouchstart="" @onclick="OnClickAsync">
    <CascadingValue Value="Context">@ChildContent</CascadingValue>
</button>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public bool IsDisabled { get; set; }

    [Parameter]
    public EventCallback Clicked { get; set; }

    [Parameter]
    public object? Tag { get; set; }

    [CascadingParameter]
    private UIContext ParentContext { get; set; } = new();

    private UIContext Context => ParentContext with { IsDisabled = ParentContext.Menu?.IsOpen == false || ParentContext.IsDisabled || IsDisabled };

    private string ItemClass => Context.IsDisabled ? "dp-menu-item-disabled" : "dp-menu-item";

    private async Task OnClickAsync()
    {
        if (!Context.IsDisabled)
        {
            if (Context.Menu != null)
            {
                await Context.Menu.CloseAsync();
            }

            if (Clicked.HasDelegate)
            {
                await Clicked.InvokeAsync();
            }
        }
    }
}
